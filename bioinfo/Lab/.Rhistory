library(igraph)
install.packages("igraph")
library("igraph")
g = read.graph("G1.net", format="Pajek")
tkplot(g)
g = read.graph("G1.net",format="pajek", directed=FALSE) d1 = degree.distribution(g, cumulative=FALSE)
len = length(d1)
png(filename="G1_graus.png", height=500, width=500, bg="white")
barplot(d1, main="Distribuição de Graus",xlab="Graus", ylab="PDF", names.arg=c(0:(len-1)))
d1 = degree.distribution(g, cumulative=FALSE)
barplot(d1, main="Distribuição de Graus",xlab="Graus", ylab="PDF", names.arg=c(0:(len-1)))
len = length(d1)
barplot(d1, main="Distribuição de Graus",xlab="Graus", ylab="PDF", names.arg=c(0:(len-1)))
png(filename="G1_graus.png", height=500, width=500, bg="white")
barplot(d1, main="Distribuição de Graus",xlab="Graus", ylab="PDF", names.arg=c(0:(len-1)))
g = read.graph("G1.net",format="pajek", directed=FALSE)
g = read.graph("G1.net",format="Pajek")
barplot(d1, main="Distribuição de Graus",xlab="Graus", ylab="PDF", names.arg=c(0:(len-1)))
barplot(d1, main="Distribuição de Graus",xlab="Graus", ylab="PDF", names.arg=c(0:(len-1)))
barplot(d1, main="Distribuicao de Graus",xlab="Graus", ylab="PDF", names.arg=c(0:(len-1)))
d1
d1 = degree.distribution(g, cumulative=FALSE)
d1
g = read.graph("G1.net",format="Pajek")
g
d1 = degree.distribution(g, cumulative=FALSE)
d1
closeness(g)
V(g)
V(g)$id
max(closeness(g))
maior_closeness = which(max(closeness(g)))
which(max(closeness(g)))
which(closeness(g)==max(closeness(g)))
max_closeness = which(closeness(g)==max(closeness(g)))
V(g)[max_closeness]$id
min_closeness = which(closeness(g)==min(closeness(g)))
V(g)[min_closeness]$id
closeness(g)
sum(closeness(g))
V(g)[max_closeness]$id
V(g)[min_closeness]$id
betweeness(g)
betweness(g)
betweeness(g)
betweenness(g)
max_betweenness = max(betweenness(g))
min_betweenness = min(betweenness(g))
V(g)[min_betweenness]$id
V(g)[max_betweenness]$id
max_betweenness = which(betweenness(g)==max(betweenness(g))
min_betweenness = which(betweenness(g)==min(betweenness(g))
min_betweenness = which(betweenness(g)==min(betweenness(g))
V(g)[min_betweenness]$id
V(g)[max_betweenness]$id
min_closeness = which(closeness(g)==min(closeness(g)))
min_bt = which(betweenness(g)==min(betweenness(g)))
max_bt = which(betweenness(g)==max(betweenness(g)))
V(g)[max_bt]$id
V(g)[min_bt]$id
vcount(g)
E(g)
E(g)$id
edge.betweebbess(g)
edge.betweenness(g)
edge.betweenness(g)$id
which(edge.betweenness(g)==max(edge.betweenness(g)))
max_e_bt = which(edge.betweenness(g)==max(edge.betweenness(g)))

V(g)[max_e_bt]$id
E(g)[max_e_bt]$id
E(g)[max_e_bt]
max_e_bt = which(edge.betweenness(g)==5.0)
E(g)[max_e_bt]
